{"ast":null,"code":"var _jsxFileName = \"/Users/remiquilliet/Documents/Projets/lqdlf/react-footdle/src/components/Row.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Row(_ref) {\n  let {\n    guess,\n    currentGuess,\n    solution\n  } = _ref;\n\n  if (guess) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row past\",\n      children: guess.map((l, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: l.color,\n        children: l.key\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (currentGuess) {\n    let letters = currentGuess.split('');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row current\",\n      children: letters.map((letter, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filled\",\n        children: letter\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n  const getNumberofLetters = count => {\n    const arr = [];\n\n    for (let i = 0; i < count; i++) {\n      arr.push( /*#__PURE__*/_jsxDEV(\"div\", {}, i + 1000, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 20\n      }, this));\n    }\n\n    return arr;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: getNumberofLetters(solution.length)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c = Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/Users/remiquilliet/Documents/Projets/lqdlf/react-footdle/src/components/Row.js"],"names":["React","Row","guess","currentGuess","solution","map","l","i","color","key","letters","split","letter","getNumberofLetters","count","arr","push","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,GAAT,OAA4C;AAAA,MAA/B;AAACC,IAAAA,KAAD;AAAOC,IAAAA,YAAP;AAAoBC,IAAAA;AAApB,GAA+B;;AAEvD,MAAIF,KAAJ,EAAU;AACN,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACIA,KAAK,CAACG,GAAN,CAAU,CAACC,CAAD,EAAGC,CAAH,kBACN;AAAa,QAAA,SAAS,EAAED,CAAC,CAACE,KAA1B;AAAA,kBAAkCF,CAAC,CAACG;AAApC,SAAUF,CAAV;AAAA;AAAA;AAAA;AAAA,cADJ;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAED,MAAIJ,YAAJ,EAAiB;AACb,QAAIO,OAAO,GAAGP,YAAY,CAACQ,KAAb,CAAmB,EAAnB,CAAd;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACKD,OAAO,CAACL,GAAR,CAAY,CAACO,MAAD,EAASL,CAAT,kBACT;AAAc,QAAA,SAAS,EAAC,QAAxB;AAAA,kBAAkCK;AAAlC,SAAWL,CAAX;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAED,QAAMM,kBAAkB,GAAIC,KAAD,IAAW;AAClC,UAAMC,GAAG,GAAG,EAAZ;;AACA,SAAI,IAAIR,CAAC,GAAE,CAAX,EAAcA,CAAC,GAACO,KAAhB,EAAuBP,CAAC,EAAxB,EAA2B;AACzBQ,MAAAA,GAAG,CAACC,IAAJ,eAAS,mBAAUT,CAAC,GAAC,IAAZ;AAAA;AAAA;AAAA;AAAA,cAAT;AACD;;AACD,WAAOQ,GAAP;AACD,GANH;;AAQF,sBACE;AAAK,IAAA,SAAS,EAAE,KAAhB;AAAA,cACKF,kBAAkB,CAACT,QAAQ,CAACa,MAAV;AADvB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;KAxCuBhB,G","sourcesContent":["import React from 'react'\n\nexport default function Row({guess,currentGuess,solution}) {\n\n    if (guess){\n        return (\n            <div className=\"row past\">\n               {guess.map((l,i) => (\n                    <div key={i} className={l.color}>{l.key}</div>\n               )\n               )} \n            </div>\n        )\n\n    }\n\n    if (currentGuess){\n        let letters = currentGuess.split('')\n        return (\n            <div className='row current'>\n                {letters.map((letter, i) => (\n                    <div key ={i} className='filled'>{letter}</div>\n                )\n                )}\n            </div>\n        )\n\n    }\n\n    const getNumberofLetters = (count) => {\n        const arr = []\n        for(let i= 0; i<count; i++){\n          arr.push(<div key={i+1000}></div>)\n        }\n        return arr;\n      }\n\n  return (\n    <div className =\"row\">\n        {getNumberofLetters(solution.length)}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}