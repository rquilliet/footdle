{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useWordle = solution => {\n  _s();\n\n  const [turn, setTurn] = useState(0);\n  const [currentGuess, setCurrentGuess] = useState('');\n  const [guesses, setGuesses] = useState([]); // each guess is an array\n\n  const [history, setHistory] = useState([]); // each guess is a string\n\n  const [isCorrect, setIsCorrect] = useState(false);\n\n  const formatGuess = () => {};\n\n  const addNewGuess = () => {};\n\n  const handleKeyup = _ref => {\n    let {\n      key\n    } = _ref;\n\n    if (/^[A-Za-z]$/.test(key)) {\n      if (currentGuess.length < solution.length) {\n        setCurrentGuess();\n      }\n    }\n  };\n\n  return {\n    turn,\n    currentGuess,\n    guesses,\n    isCorrect,\n    handleKeyup\n  };\n};\n\n_s(useWordle, \"IVXWGlg92Q9wlAIzJ5cBAfAX2uI=\");\n\nexport default useWordle;","map":{"version":3,"sources":["/Users/remiquilliet/Documents/Projets/lqdlf/react-footdle/src/hooks/useWordle.js"],"names":["useState","useWordle","solution","turn","setTurn","currentGuess","setCurrentGuess","guesses","setGuesses","history","setHistory","isCorrect","setIsCorrect","formatGuess","addNewGuess","handleKeyup","key","test","length"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,SAAS,GAAIC,QAAD,IAAc;AAAA;;AAE5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC,CAJ4B,CAIe;;AAC3C,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC,CAL4B,CAKe;;AAC3C,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMa,WAAW,GAAG,MAAM,CAEzB,CAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM,CAGzB,CAHD;;AAKA,QAAMC,WAAW,GAAG,QAAW;AAAA,QAAV;AAACC,MAAAA;AAAD,KAAU;;AAC3B,QAAI,aAAaC,IAAb,CAAkBD,GAAlB,CAAJ,EAA4B;AACxB,UAAIX,YAAY,CAACa,MAAb,GAAsBhB,QAAQ,CAACgB,MAAnC,EAA2C;AACvCZ,QAAAA,eAAe;AAClB;AACJ;AAGJ,GARD;;AAUA,SAAO;AAACH,IAAAA,IAAD;AAAOE,IAAAA,YAAP;AAAqBE,IAAAA,OAArB;AAA8BI,IAAAA,SAA9B;AAAyCI,IAAAA;AAAzC,GAAP;AACH,CA5BD;;GAAMd,S;;AA8BN,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\"\n\nconst useWordle = (solution) => {\n\n    const [turn, setTurn] = useState(0) \n    const [currentGuess, setCurrentGuess] = useState('')\n    const [guesses, setGuesses] = useState([]) // each guess is an array\n    const [history, setHistory] = useState([]) // each guess is a string\n    const [isCorrect, setIsCorrect] = useState(false)\n\n    const formatGuess = () => {\n       \n    }\n\n    const addNewGuess = () => {\n\n\n    }\n\n    const handleKeyup = ({key}) => {\n        if (/^[A-Za-z]$/.test(key)) {\n            if (currentGuess.length < solution.length) {\n                setCurrentGuess()\n            }\n        }\n\n\n    }\n\n    return {turn, currentGuess, guesses, isCorrect, handleKeyup}\n}\n\nexport default useWordle"]},"metadata":{},"sourceType":"module"}