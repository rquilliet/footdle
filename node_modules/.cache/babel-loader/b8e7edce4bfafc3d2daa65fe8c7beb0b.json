{"ast":null,"code":"var _jsxFileName = \"/Users/remiquilliet/Documents/Projets/lqdlf/react-footdle/src/components/Grid.js\";\nimport React from 'react';\nimport Row from './Row';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Grid(_ref) {\n  let {\n    currentGuess,\n    guesses,\n    turn,\n    solution\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: guesses.map((g, i) => {\n      if (turn === i) {\n        return /*#__PURE__*/_jsxDEV(Row, {\n          currentGuess: currentGuess,\n          solution: solution\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 24\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Row, {\n        guess: g,\n        solution: solution\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/remiquilliet/Documents/Projets/lqdlf/react-footdle/src/components/Grid.js"],"names":["React","Row","Grid","currentGuess","guesses","turn","solution","map","g","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,eAAe,SAASC,IAAT,OAAuD;AAAA,MAAzC;AAACC,IAAAA,YAAD;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA,IAAxB;AAA8BC,IAAAA;AAA9B,GAAyC;AACpE,sBACE;AAAA,cACKF,OAAO,CAACG,GAAR,CAAY,CAACC,CAAD,EAAGC,CAAH,KAAS;AAClB,UAAIJ,IAAI,KAAKI,CAAb,EAAgB;AACZ,4BAAO,QAAC,GAAD;AAAa,UAAA,YAAY,EAAEN,YAA3B;AAAyC,UAAA,QAAQ,EAAEG;AAAnD,WAAUG,CAAV;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;;AACD,0BAAO,QAAC,GAAD;AAAa,QAAA,KAAK,EAAED,CAApB;AAAuB,QAAA,QAAQ,EAAEF;AAAjC,SAAUG,CAAV;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KALA;AADL;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;KAXuBP,I","sourcesContent":["import React from 'react'\nimport Row from './Row'\n\nexport default function Grid({currentGuess, guesses, turn, solution}) {\n  return (\n    <div>\n        {guesses.map((g,i) => {\n            if (turn === i) {\n                return <Row key={i} currentGuess={currentGuess} solution={solution}/>\n            }\n            return <Row key={i} guess={g} solution={solution}/>\n        })}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}